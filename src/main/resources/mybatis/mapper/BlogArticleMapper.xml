<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhamster.mapper.BlogArticleMapper">
    <resultMap id="BaseResultMap" type="com.lhamster.domain.BlogArticle">
        <id column="a_id" property="aId" jdbcType="INTEGER"/>
        <result column="a_title" property="aTitle" jdbcType="VARCHAR"/>
        <result column="a_createtime" property="aCreatetime" jdbcType="TIMESTAMP"/>
        <result column="a_likecount" property="aLikecount" jdbcType="INTEGER"/>
        <result column="a_visitcount" property="aVisitcount" jdbcType="INTEGER"/>
        <result column="a_status" property="aStatus" jdbcType="BIT"/>
        <result column="a_picture" property="aPicture" jdbcType="VARCHAR"/>
        <result column="a_cate_id" property="aCateId" jdbcType="INTEGER"/>
        <result column="a_user_id" property="aUserId" jdbcType="INTEGER"/>
        <result column="a_content" property="aContent" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_article
    where a_id = #{aId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.lhamster.domain.BlogArticle">
    insert into blog_article (a_id, a_title, a_createtime, 
      a_likecount, a_visitcount, a_status, 
      a_picture, a_cate_id, a_user_id, 
      a_content)
    values (#{aId,jdbcType=INTEGER}, #{aTitle,jdbcType=VARCHAR}, #{aCreatetime,jdbcType=TIMESTAMP}, 
      #{aLikecount,jdbcType=INTEGER}, #{aVisitcount,jdbcType=INTEGER}, #{aStatus,jdbcType=BIT}, 
      #{aPicture,jdbcType=VARCHAR}, #{aCateId,jdbcType=INTEGER}, #{aUserId,jdbcType=INTEGER}, 
      #{aContent,jdbcType=LONGVARCHAR})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.lhamster.domain.BlogArticle">
        update blog_article
        <set>
            <if test="aTitle != null and aTitle != ''">
                a_title = #{aTitle},
            </if>
            <if test="aContent != null and aContent != ''">
                a_content = #{aContent},
            </if>
            <if test="aPicture != null and aPicture != ''">
                a_picture = #{aPicture}
            </if>
        </set>
        where a_id = #{aId}
    </update>
    <update id="setArticleStatus">
        update blog_article
        set a_status = #{status}
        where a_id = #{id}
    </update>
    <update id="setLikeCount">
        update blog_article
        set a_likecount = #{aLikecount}
        where a_id = #{id}
    </update>
    <update id="setVisitCount">
        update blog_article
        set a_visitcount = #{aVisitcount}
        where a_id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select a_id, a_title, a_createtime, a_likecount, a_visitcount, a_status, a_picture, 
    a_cate_id, a_user_id, a_content
    from blog_article
    where a_id = #{aId,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select a_id, a_title, a_createtime, a_likecount, a_visitcount, a_status, a_picture,
        a_cate_id, a_user_id, a_content
        from blog_article
        <where>
            <if test="title != null and title != ''">
                a_title like concat('%',#{title},'%')
            </if>
            <if test="cateId != null">
                and a_cate_id = #{cateId}
            </if>
            <choose>
                <when test="status != null">and a_status = false</when>
                <otherwise>and a_status = true</otherwise>
            </choose>
            <if test="judge != null">
                and a_user_id = #{userId}
            </if>
        </where>
        order by
        <choose>
            <when test="sort == 1">
                a_visitcount
            </when>
            <when test="sort == 2">
                a_likecount
            </when>
            <otherwise>a_createtime</otherwise>
        </choose>
        desc
    </select>
</mapper>