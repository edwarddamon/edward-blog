<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhamster.mapper.BlogFriendblogMapper">
    <resultMap id="BaseResultMap" type="com.lhamster.domain.BlogFriendblog">
        <id column="f_id" property="fId" jdbcType="INTEGER"/>
        <result column="f_name" property="fName" jdbcType="VARCHAR"/>
        <result column="f_url" property="fUrl" jdbcType="VARCHAR"/>
        <result column="f_status" property="fStatus" jdbcType="INTEGER"/>
        <result column="f_backinfo" property="fBackinfo" jdbcType="VARCHAR"/>
        <result column="f_friendblogtime" property="fFriendblogtime" jdbcType="TIMESTAMP"/>
        <!--级联用户-->
        <association property="user" column="f_user_id" javaType="com.lhamster.domain.BlogUser"
                     select="com.lhamster.mapper.BlogUserMapper.selectById"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from blog_friendblog
    where f_id = #{fId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.lhamster.domain.BlogFriendblog">
    insert into blog_friendblog (f_id, f_name, f_url, 
      f_status, f_backinfo, f_friendblogtime, 
      f_user_id)
    values (#{fId,jdbcType=INTEGER}, #{fName,jdbcType=VARCHAR}, #{fUrl,jdbcType=VARCHAR}, 
      #{fStatus,jdbcType=INTEGER}, #{fBackinfo,jdbcType=VARCHAR}, #{fFriendblogtime,jdbcType=TIMESTAMP},
      #{user.uId,jdbcType=INTEGER})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.lhamster.domain.BlogFriendblog">
    update blog_friendblog
    set f_name = #{fName,jdbcType=VARCHAR},
      f_url = #{fUrl,jdbcType=VARCHAR},
      f_status = #{fStatus,jdbcType=INTEGER},
      f_backinfo = #{fBackinfo,jdbcType=VARCHAR},
      f_friendblogtime = #{fFriendblogtime,jdbcType=TIMESTAMP},
      f_user_id = #{user.uId,jdbcType=INTEGER}
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select f_id, f_name, f_url, f_status, f_backinfo, f_friendblogtime, f_user_id
    from blog_friendblog
    where f_id = #{fId,jdbcType=INTEGER}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select f_id, f_name, f_url, f_status, f_backinfo, f_friendblogtime, f_user_id
    from blog_friendblog
    where f_status = 2
    order by `f_friendblogtime` desc
  </select>
    <select id="queryAll" resultMap="BaseResultMap">
        select f_id, f_name, f_url, f_status, f_backinfo, f_friendblogtime, f_user_id
        from blog_friendblog
        <where>
            <if test="id != null">
                f_id = #{id}
            </if>
            <if test="status != null">
                and f_status = #{status}
            </if>
            <if test="userId != null">
                and f_user_id = #{userId}
            </if>
        </where>
        order by `f_friendblogtime` desc
    </select>
</mapper>